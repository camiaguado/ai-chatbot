# You must first activate a Billing Account here: https://platform.openai.com/account/billing/overview
# Then get your OpenAI API Key here: https://platform.openai.com/account/api-keys
OPENAI_API_KEY=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

# Generate a random secret: https://generate-secret.vercel.app/32 or `openssl rand -base64 32`
AUTH_SECRET=d2074e61424b6426f4142d5ca4d9522b
# Create a GitHub OAuth app here: https://github.com/settings/applications/new
# Authorization callback URL: https://authjs.dev/reference/core/providers_github#callback-url
AUTH_GITHUB_ID=41f0669137f54a016241
AUTH_GITHUB_SECRET=e8e59156bd67c684c98f46a58e7368370dd37d8f
# Support OAuth login on preview deployments, see: https://authjs.dev/guides/basics/deployment#securing-a-preview-deployment
# Set the following only when deployed. In this example, we can reuse the same OAuth app, but if you are storing users, we recommend using a different OAuth app for development/production so that you don't mix your test and production user base.
# AUTH_REDIRECT_PROXY_URL=https://YOURAPP.vercel.app/api/auth

# Instructions to create kv database here: https://vercel.com/docs/storage/vercel-kv/quickstart and 
KKV_URL="redis://default:5dbd56d9802e47f6b50db9e0a37a0504@ace-sponge-34694.kv.vercel-storage.com:34694"
KV_REST_API_URL="https://ace-sponge-34694.kv.vercel-storage.com"
KV_REST_API_TOKEN="AYeGASQgMzM1M2VhN2MtZGNkMC00OGY0LWI0OTMtNzQ3YTQ2NzQ4YzE2NWRiZDU2ZDk4MDJlNDdmNmI1MGRiOWUwYTM3YTA1MDQ="
KV_REST_API_READ_ONLY_TOKEN="AoeGASQgMzM1M2VhN2MtZGNkMC00OGY0LWI0OTMtNzQ3YTQ2NzQ4YzE2nIV8Z3U8YDEO8APuL7QW8d6ArABHPRN_BwjmqCR9vFc="


